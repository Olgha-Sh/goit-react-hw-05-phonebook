{"version":3,"sources":["components/ContactItem/ContactItem.module.css","transition/items.module.css","components/Filter/Filter.module.css","components/App/App.module.css","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/App/App.jsx","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onAddContact","this","onSubmit","className","style","contactForm","htmlFor","generateID","type","placeholder","onChange","formBtn","Component","ContactItem","onDeleteContact","contactItem","contact_name","contact_number","onClick","listBtn","ContactList","items","TransitionGroup","component","contactList","map","el","CSSTransition","key","id","timeout","classNames","transition","defaultProps","Filter","onChangeFilter","styles","filter_form","title","filterInput","App","contacts","filter","message","showError","filterContacts","contact","toLowerCase","includes","changeFilter","addContact","contactToAdd","isInContact","find","setTimeout","deleteContact","filteredContacts","in","appear","unmountOnExit","error_message","length","fade","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.72f7957a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"listBtn\":\"ContactItem_listBtn__1fuFd\",\"contactItem\":\"ContactItem_contactItem__3CstP\",\"contact_name\":\"ContactItem_contact_name__2BQ3B\",\"contact_number\":\"ContactItem_contact_number__2gaXB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"items_enter__2pJcq\",\"enterActive\":\"items_enterActive__n5uN9\",\"exit\":\"items_exit__3Cbic\",\"exitActive\":\"items_exitActive__JnJ4t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_form\":\"Filter_filter_form__1wRE8\",\"title\":\"Filter_title__Soeg_\",\"filterInput\":\"Filter_filterInput__3el2Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__3fqYQ\",\"error_message\":\"App_error_message__3Dsy4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__3jC6Z\",\"formBtn\":\"ContactForm_formBtn__3kxQ9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactList_contactItem__P-Al2\",\"contactList\":\"ContactList_contactList__3FUMZ\"};","import React, { Component } from 'react';\nimport generateID from 'uuid/v4';\nimport T from 'prop-types';\nimport style from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  static propTypes = {\n    onAddContact: T.func.isRequired,\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onAddContact({ ...this.state });\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit} className={style.contactForm}>\n        <label htmlFor={generateID()}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Enter name\"\n            value={name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label htmlFor={generateID()}>\n          Number\n          <input\n            type=\"number\"\n            placeholder=\"Enter phone number\"\n            value={number}\n            name=\"number\"\n            onChange={this.handleChange}\n          />\n        </label>\n        <button type=\"submit\" className={style.formBtn}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport T from 'prop-types';\nimport style from './ContactItem.module.css';\n\nconst ContactItem = ({ name, number, onDeleteContact }) => {\n  return (\n    <div className={style.contactItem}>\n      <p className={style.contact_name}>Contact:{name}</p>\n      <p className={style.contact_number}>{number}</p>\n      <button type=\"button\" onClick={onDeleteContact} className={style.listBtn}>\n        &#10008;\n      </button>\n    </div>\n  );\n};\n\nContactItem.propTypes = {\n  name: T.string.isRequired,\n  number: T.string.isRequired,\n  onDeleteContact: T.func.isRequired,\n};\n\nexport default ContactItem;\n","import React from 'react';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport T from 'prop-types';\nimport ContactItem from '../ContactItem/ContactItem';\nimport style from './ContactList.module.css';\nimport transition from '../../transition/items.module.css';\n\nconst ContactList = ({ items, onDeleteContact }) => {\n  return (\n    <TransitionGroup component=\"ul\" className={style.contactList}>\n      {items.map(el => (\n        <CSSTransition key={el.id} timeout={250} classNames={transition}>\n          <li className={style.contactItem}>\n            <ContactItem\n              name={el.name}\n              number={el.number}\n              onDeleteContact={() => onDeleteContact(el.id)}\n            />\n          </li>\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n};\nContactList.defaultProps = {\n  items: [],\n};\nContactList.propTypes = {\n  items: T.arrayOf(\n    T.shape({\n      name: T.string,\n      number: T.string,\n    }),\n  ),\n  onDeleteContact: T.func.isRequired,\n};\nexport default ContactList;\n","import React from 'react';\nimport T from 'prop-types';\nimport styles from './Filter.module.css';\n\nconst Filter = ({ value, onChangeFilter }) => (\n  <>\n    <div className={styles.filter_form}>\n      <p className={styles.title}>Find contacts by name...</p>\n      <input\n        className={styles.filterInput}\n        type=\"text\"\n        placeholder=\"Type to filter...\"\n        value={value}\n        onChange={onChangeFilter}\n      />\n    </div>\n  </>\n);\n\nFilter.propTypes = {\n  value: T.string.isRequired,\n  onChangeFilter: T.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport generateID from 'uuid/v4';\nimport { CSSTransition } from 'react-transition-group';\nimport styles from './App.module.css';\nimport ContactForm from '../ContactForm/ContactForm';\nimport ContactList from '../ContactList/ContactList';\nimport Filter from '../Filter/Filter';\nimport fade from '../../transition/items.module.css';\nimport '../../transition/alert.css';\nimport '../../transition/title.css';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n    message: '',\n    showError: false,\n  };\n\n  // componentDidMount() {\n  //   const notesFromLS = localStorage.getItem('contacts');\n  //   if (notesFromLS) {\n  //     this.setState({ contacts: JSON.parse(notesFromLS) });\n  //   }\n  // }\n\n  // componentDidUpdate(prevProps, prevState) {\n  //   const { contacts } = this.state;\n  //   if (prevState.contacts !== contacts) {\n  //     localStorage.setItem('contacts', JSON.stringify(contacts));\n  //   }\n  // }\n\n  filterContacts = (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.target.value });\n  };\n\n  addContact = ({ name, number }) => {\n    const { contacts } = this.state;\n    const contactToAdd = { name, number, id: generateID() };\n    const isInContact = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n\n    if (name && number) {\n      if (isInContact) {\n        this.setState(() => ({\n          message: `${name} is already in your contacts`,\n          showError: true,\n        }));\n        setTimeout(() => {\n          this.setState({ showError: false });\n        }, 2500);\n        return;\n      }\n      this.setState(state => ({\n        contacts: [...state.contacts, contactToAdd],\n      }));\n    } else {\n      this.setState(() => ({\n        message: `One of the fields is empty!`,\n        showError: true,\n      }));\n      setTimeout(() => {\n        this.setState({ showError: false });\n      }, 2500);\n    }\n  };\n\n  deleteContact = id => {\n    this.setState(state => ({\n      contacts: state.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  render() {\n    const { contacts, filter, message, showError } = this.state;\n    const filteredContacts = this.filterContacts(contacts, filter);\n\n    return (\n      <div>\n        <CSSTransition in timeout={500} classNames=\"title\" appear>\n          <div>\n            <h2 className={styles.title}>Phonebook</h2>\n          </div>\n        </CSSTransition>\n        <CSSTransition\n          in={showError}\n          unmountOnExit\n          timeout={300}\n          classNames=\"alert\"\n        >\n          <div>\n            <div className={styles.error_message}>\n              <p>{message}</p>\n            </div>\n          </div>\n        </CSSTransition>\n        <ContactForm onAddContact={this.addContact} />\n\n        {contacts.length > 1 && (\n          <CSSTransition timeout={250} classNames={fade}>\n            <Filter value={filter} onChangeFilter={this.changeFilter} />\n          </CSSTransition>\n        )}\n        <ContactList\n          items={filteredContacts}\n          onDeleteContact={this.deleteContact}\n          id={generateID()}\n        />\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}